import { logIn, settings, toastConstants } from '~/constants/common.constants'

const firstName = 'John'
const lastName = 'Doe'
const memberEmail = 'john@example.com'
const workspaceName = 'Copods workspace'

describe('Test for Sign Up page', () => {
  beforeEach('/sign-up', () => {
    cy.visit('/sign-up')
  })

  it('Check if user gets proper error when password and confirm password does not match', () => {
    cy.get('#firstName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(firstName)
      .should('have.value', firstName)
    cy.get('#lastName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(lastName)
      .should('have.value', lastName)
    cy.get('#email')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(memberEmail)
      .should('have.value', memberEmail)
    cy.get('#workspace')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(workspaceName)
      .should('have.value', workspaceName)
    cy.get('#Password').should('be.visible').clear().type('newPassword')
    cy.get('#confirmPassword')
      .should('be.visible')
      .clear()
      .type('confirmPassword')
    cy.get('#add-button').should('have.text', logIn.signUp).click()
    cy.get('#Confirm-password-error').should('have.text', settings.passNotMatch)
  })
  it('signing up successfully', () => {
    cy.get('#firstName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(firstName)
      .should('have.value', firstName)
    cy.get('#lastName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(lastName)
      .should('have.value', lastName)
    cy.get('#email')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(memberEmail)
      .should('have.value', memberEmail)
    cy.get('#workspace')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(workspaceName)
      .should('have.value', workspaceName)
    cy.get('#Password').should('be.visible').clear().type('newPassword')
    cy.get('#confirmPassword').should('be.visible').clear().type('newPassword')
    cy.get('#add-button').should('have.text', logIn.signUp).click()
    cy.get('.Toastify__toast', { timeout: 6000 }).should(
      'have.text',
      toastConstants.signUpSuccessfull
    )
  })
  it('trying to sign up but member is already exist', () => {
    cy.get('#firstName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(firstName)
      .should('have.value', firstName)
    cy.get('#lastName')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(lastName)
      .should('have.value', lastName)
    cy.get('#email')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(memberEmail)
      .should('have.value', memberEmail)
    cy.get('#workspace')
      .should('be.visible', { timeout: 60000 })
      .clear()
      .type(workspaceName)
      .should('have.value', workspaceName)
    cy.get('#Password').should('be.visible').clear().type('newPassword')
    cy.get('#confirmPassword').should('be.visible').clear().type('newPassword')
    cy.get('#add-button').should('have.text', logIn.signUp).click()
    cy.get('.Toastify__toast', { timeout: 8000 }).should(
      'have.text',
      toastConstants.memberAlreadyExist
    )
  })
})
